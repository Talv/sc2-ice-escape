struct sf_envi_surface_t {
    region rg;
};

sf_envi_surface_t [SF_ENVI_OBJECT_INSTANCE_LIMIT]sf_envi_surfaces;

static void sf_envi_surface_on_destroy(int obj_id)
{
}

void sf_envi_surface_init()
{
    sf_envi_object_type_t obj_type;

    obj_type.name = "surface";
    obj_type.fn_destroy = sf_envi_surface_on_destroy;
    sf_envi_object_register_type_at(obj_type, SF_ENVI_OBJECT_TYPE_SURFACE);
}

int sf_envi_surface_create(string unit_name, point pos, int surface_type, region rg, bool attach_rg)
{
    int obj_id;

    obj_id = sf_envi_object_create_main_at(SF_ENVI_OBJECT_TYPE_SURFACE, unit_name, pos);
    sf_envi_surfaces[obj_id].rg = rg;

    if (attach_rg) {
        RegionAttachToUnit(rg, sf_envi_object_instances[obj_id].main_unit, null);
    }
    lv_registerSurface(surface_type, rg, true);

    return obj_id;
}

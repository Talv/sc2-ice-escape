int test_errors = 0;

void assert(bool expected, string msg)
{
    if (expected) { return; }
    Dbg("[assert] False - " + msg);
    test_errors += 1;
}

void equal_int(int actual, int expected, string msg)
{
    if (expected == actual) { return; }
    Dbg("[equal] expected = '" + IntToString(expected) + "' ; actual = '" + IntToString(actual) + "' - " + msg);
    test_errors += 1;
}

void test_string_find()
{
    equal_int(string_find_last("123123", "123", true), 4, "test_string_find_1");
    equal_int(string_find_last("123123", "3", true), 6, "test_string_find_2");
    equal_int(string_find_last("123", "2", true), 2, "test_string_find_3");
    equal_int(string_find_last("123", "1", true), 1, "test_string_find_4");
    equal_int(string_find_last("123", "0", true), -1, "test_string_find_5");
    equal_int(string_find_last("123", "1234", true), -1, "test_string_find_6");
}

void test_stream()
{
    db_stream_t st1;

    db_stream_init(st1, DB_STREAM_FIFO);
    // db_stream_push_int(st1, );
}

bool test_run()
{
    test_string_find();

    return test_errors == 0;
}
